class Solution {
  public:
    vector<int> nextLargerElement(vector<int> &arr) {
        // code here
         int n = arr.size();
        vector<int> res(n, -1);
        stack<int> st;

        // Traverse array twice (2n-1 to 0)
        for (int i = 2 * n - 1; i >= 0; --i) {
            int curr = arr[i % n];

            // Pop all smaller or equal elements
            while (!st.empty() && arr[st.top()] <= curr) {
                st.pop();
            }

            // If in first pass, assign result
            if (i < n) {
                if (!st.empty()) {
                    res[i] = arr[st.top()];
                } // else default -1 is fine
            }

            // Push current index (mod n)
            st.push(i % n);
        }

        return res;
    }
};
